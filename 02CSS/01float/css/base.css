.clear:after,.clear:before{content:'.';height:0px; visibility:hidden;display:block;clear:both;}
.clear{zoom:1;}

/*清除浮动的方式有很多种  不是每一种都合适，上面是最高大上的一种
还有 clear:both
overflow:hidden;
*/
/*浮动的危害： 脱离文档流、使未设置高度父容器的高度为0，显示不出背景，和影响后面元素的布局
清除浮动7中方法比较
1、父容器设置height包裹子浮动的元素，但是这种方式高度是写死的，不好，实际开发用的最少
2、clear属性，可以清除浮动，但是缺点只能清除同级元素的浮动
3、内墙法：为了撑开父元素在浮动的子元素的最后加上一个空标签<div style="clear:both"></div>,缺点引入的多余的元素
4、外墙法：就是去除同级元素的浮动，比如网页的头部和中间部分之间加一个<div style="clear:both"></div>来清除浮动，缺点也是引入了多余的元素
5、overflow:hidden 可以清除子元素的浮动，缺点当元子元素是定位布局的时候超出的部分会被不显示
6、after 和 before伪类法：是在自己的内容的开始和结尾处插入标签，缺点只能清除子元素的浮动，不能清除同级元素的浮动

所以总结：
清除 同级元素的浮动使用 clear
清除子元素的浮动撑开自己 可以使用 伪类法 或者 overflow法
*/

/*
标准文档流：元素从左到右 从上到下 以此排列
1、行内元素：
1）允许其他元素在同一行
2）宽高不可以设置
3）宽高由内容撑开

2、块元素：
1）自己独占一行
2）宽高可以设置

浮动：
1、元素脱离文档流(没有完全脱离文档流 位置还受到父容器的约束)
2、变成块元素  不可以设置为行内元素
3、width由父容器撑开，也可以设置
4、依靠父容器的边界或者同级的元素的边
5、默认浮动元素不会相互重叠的 但是如果margin或者padding是 负值的时候会发生重叠
6、当子元素宽高大于 父容器的元素时 会超出显示
7、周围的文字会发生环绕效果（这是浮动的初衷）


定位：
最大的用途是 层叠
相对定位
1）还在标准的文档流中,原来的位置还在
2）相对于原来的位置发生偏移 设置top 和 left等属性
3）作为绝对布局的参考位置
4）UI上重叠或者超出的偏移可以使用它来做

绝对定位
1）完全脱离文档流 包含浮动的特效 但是浮动的元素也当他不存在，遇到也不会发生依靠
2）一般他的父容器使用相对布局来作为他的参考
3）会发生重叠  可以通过z-index来设置 层级关系

固定布局
1）相当于屏幕，随着滚轮的滑动会发生变化




float 和 绝对定位 区别
1）float并没有脱离文档流，绝对定位完全脱离了文档流
2）float可清除浮动来撑开父容器，绝对定位不可以清除浮动也不能撑开父元素
3）float可以和相对定位一起使用，但是不可以和 绝对定位和相对定位一起用，这样float会失效

*/
